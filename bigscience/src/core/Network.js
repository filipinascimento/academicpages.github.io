import{createColorMap as h,linearScale as i}from"../../web_modules/@colormap/core.js";import{inferno as j}from"../../web_modules/@colormap/presets.js";export class Network{constructor(e,c,k){this.nodes=e,this.node2index=new Object(),this.index2node=[],this.indexedEdges=new Int32Array(c.length*2);for(let a=0;a<c.length;a++){const b=c[a];this.node2index.hasOwnProperty(b.source)||(this.node2index[b.source]=this.index2node.length,this.index2node.push(b.source)),this.node2index.hasOwnProperty(b.target)||(this.node2index[b.target]=this.index2node.length,this.index2node.push(b.target)),this.indexedEdges[a*2]=this.node2index[b.source],this.indexedEdges[a*2+1]=this.node2index[b.target]}this.positions=new Float32Array(3*this.index2node.length),this.colors=new Float32Array(3*this.index2node.length),this.scales=new Float32Array(this.index2node.length),this.intensities=new Float32Array(this.index2node.length);let f=i([0,this.index2node.length],[0,1]),g=h(j,f);for(let a=0;a<this.index2node.length;a++){let b=this.nodes[this.index2node[a]];b.hasOwnProperty("position")?(this.positions[a*3]=b.position[0],this.positions[a*3+1]=b.position[1],this.positions[a*3+2]=b.position[2]):(this.positions[a*3+0]=(Math.random()-.5)*2*200,this.positions[a*3+1]=(Math.random()-.5)*2*200,this.positions[a*3+2]=(Math.random()-.5)*2*200);{let d=g(a);this.colors[a*3+0]=d[0],this.colors[a*3+1]=d[1],this.colors[a*3+2]=d[2]}}for(let a=0;a<this.scales.length;a++)this.scales[a]=.25+Math.random()*.5,this.intensities[a]=1}}
